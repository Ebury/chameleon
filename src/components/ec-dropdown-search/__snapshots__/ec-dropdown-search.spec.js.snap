// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`EcDropdownSearch should add a tooltip for any disabled item 1`] = `
<ul
  class="ec-dropdown-search__item-list"
>
  <li
    class="ec-dropdown-search__search-area"
  >
    <svg
      class="ec-dropdown-search__search-icon ec-icon"
    >
      <use
        xlink:href="#ec-simple-search"
      />
    </svg>
     
    <input
      autocomplete="off"
      class="ec-dropdown-search__search-input"
      placeholder="Search..."
    />
  </li>
   
  <li
    class="ec-dropdown-search__item"
    title="Item 1"
  >
    Item 1
  </li>
  <li
    class="ec-dropdown-search__item"
    title="Item 2"
  >
    Item 2
  </li>
  <li
    class="ec-dropdown-search__item"
    title="Item 3"
  >
    Item 3
  </li>
  <li
    class="ec-dropdown-search__item ec-dropdown-search__item--is-disabled"
    mocked-tooltip-content="Random text"
    mocked-tooltip-placement="right"
    title="Item 4"
  >
    Item 4
  </li>
  <li
    class="ec-dropdown-search__item"
    title="Item 5"
  >
    Item 5
  </li>
</ul>
`;

exports[`EcDropdownSearch should merge given popoverOptions 1`] = `
"Snapshot Diff:
- First value
+ Second value

@@ -1,12 +1,12 @@
  <div
    class=\\"ec-dropdown-search\\"
  >
    <ecpopover-stub
      level=\\"\\"
-     offset=\\"8\\"
-     placement=\\"bottom\\"
+     offset=\\"16\\"
+     placement=\\"top\\"
      popoverarrowclass=\\"\\"
      popoverclass=\\"\\"
      popoverinnerclass=\\"ec-dropdown-search__popover\\"
      popperoptions=\\"[object Object]\\"
    >"
`;

exports[`EcDropdownSearch should merge given tooltipOptions and item.tooltip prop 1`] = `
"Snapshot Diff:
- First value
+ Second value

@@ -33,12 +33,12 @@
            />
          </li>
           
          <li
            class=\\"ec-dropdown-search__item ec-dropdown-search__item--is-disabled\\"
-           mocked-tooltip-content=\\"This reason should not be seen because it's overridden by tooltip.content.\\"
-           mocked-tooltip-placement=\\"right\\"
+           mocked-tooltip-content=\\"Content overridden by item\\"
+           mocked-tooltip-placement=\\"top\\"
            title=\\"Random Item\\"
          >
            Random Item
          </li>
        </ul>"
`;

exports[`EcDropdownSearch should not render the search if isSearchEnabled is set to false 1`] = `undefined`;

exports[`EcDropdownSearch should not select disabled item 1`] = `undefined`;

exports[`EcDropdownSearch should not select disabled item 2`] = `undefined`;

exports[`EcDropdownSearch should render all given items 1`] = `
<ul
  class="ec-dropdown-search__item-list"
>
  <li
    class="ec-dropdown-search__search-area"
  >
    <svg
      class="ec-dropdown-search__search-icon ec-icon"
    >
      <use
        xlink:href="#ec-simple-search"
      />
    </svg>
     
    <input
      autocomplete="off"
      class="ec-dropdown-search__search-input"
      placeholder="Search..."
    />
  </li>
   
  <li
    class="ec-dropdown-search__item"
    title="Item 1"
  >
    Item 1
  </li>
  <li
    class="ec-dropdown-search__item"
    title="Item 2"
  >
    Item 2
  </li>
  <li
    class="ec-dropdown-search__item"
    title="Item 3"
  >
    Item 3
  </li>
  <li
    class="ec-dropdown-search__item ec-dropdown-search__item--is-disabled"
    mocked-tooltip-content="Random text"
    mocked-tooltip-placement="right"
    title="Item 4"
  >
    Item 4
  </li>
  <li
    class="ec-dropdown-search__item"
    title="Item 5"
  >
    Item 5
  </li>
</ul>
`;

exports[`EcDropdownSearch should render as expected 1`] = `
<div
  class="ec-dropdown-search"
>
  <ecpopover-stub
    level=""
    offset="8"
    placement="bottom"
    popoverarrowclass=""
    popoverclass=""
    popoverinnerclass="ec-dropdown-search__popover"
    popperoptions="[object Object]"
  >
     
    <div>
      <ul
        class="ec-dropdown-search__item-list"
      >
        <li
          class="ec-dropdown-search__search-area"
        >
          <svg
            class="ec-dropdown-search__search-icon ec-icon"
          >
            <use
              xlink:href="#ec-simple-search"
            />
          </svg>
           
          <input
            autocomplete="off"
            class="ec-dropdown-search__search-input"
            placeholder="Search..."
          />
        </li>
         
      </ul>
    </div>
  </ecpopover-stub>
</div>
`;

exports[`EcDropdownSearch should render given default slot 1`] = `
<div
  class="ec-dropdown-search"
>
  <ecpopover-stub
    level=""
    offset="8"
    placement="bottom"
    popoverarrowclass=""
    popoverclass=""
    popoverinnerclass="ec-dropdown-search__popover"
    popperoptions="[object Object]"
  >
    <a
      href="#"
    >
      Open me
    </a>
     
    <div>
      <ul
        class="ec-dropdown-search__item-list"
      >
        <li
          class="ec-dropdown-search__search-area"
        >
          <svg
            class="ec-dropdown-search__search-icon ec-icon"
          >
            <use
              xlink:href="#ec-simple-search"
            />
          </svg>
           
          <input
            autocomplete="off"
            class="ec-dropdown-search__search-input"
            placeholder="Search..."
          />
        </li>
         
      </ul>
    </div>
  </ecpopover-stub>
</div>
`;

exports[`EcDropdownSearch should render given item slot 1`] = `
<div
  class="ec-dropdown-search"
>
  <ecpopover-stub
    level=""
    offset="8"
    placement="bottom"
    popoverarrowclass=""
    popoverclass=""
    popoverinnerclass="ec-dropdown-search__popover"
    popperoptions="[object Object]"
  >
     
    <div>
      <ul
        class="ec-dropdown-search__item-list"
      >
        <li
          class="ec-dropdown-search__search-area"
        >
          <svg
            class="ec-dropdown-search__search-icon ec-icon"
          >
            <use
              xlink:href="#ec-simple-search"
            />
          </svg>
           
          <input
            autocomplete="off"
            class="ec-dropdown-search__search-input"
            placeholder="Search..."
          />
        </li>
         
        <li
          class="ec-dropdown-search__item"
          title="Item 1"
        >
          <div>
            <strong>
              0.
            </strong>
            Item 1
          </div>
        </li>
        <li
          class="ec-dropdown-search__item"
          title="Item 2"
        >
          <div>
            <strong>
              1.
            </strong>
            Item 2
          </div>
        </li>
        <li
          class="ec-dropdown-search__item"
          title="Item 3"
        >
          <div>
            <strong>
              2.
            </strong>
            Item 3
          </div>
        </li>
        <li
          class="ec-dropdown-search__item ec-dropdown-search__item--is-disabled"
          mocked-tooltip-content="Random text"
          mocked-tooltip-placement="right"
          title="Item 4"
        >
          <div>
            <strong>
              3.
            </strong>
            Item 4
          </div>
        </li>
        <li
          class="ec-dropdown-search__item"
          title="Item 5"
        >
          <div>
            <strong>
              4.
            </strong>
            Item 5
          </div>
        </li>
      </ul>
    </div>
  </ecpopover-stub>
</div>
`;

exports[`EcDropdownSearch should render given items slot 1`] = `
<div
  class="ec-dropdown-search"
>
  <ecpopover-stub
    level=""
    offset="8"
    placement="bottom"
    popoverarrowclass=""
    popoverclass=""
    popoverinnerclass="ec-dropdown-search__popover"
    popperoptions="[object Object]"
  >
     
    <div>
      <ul
        class="ec-dropdown-search__item-list"
      >
        <li
          class="ec-dropdown-search__search-area"
        >
          <svg
            class="ec-dropdown-search__search-icon ec-icon"
          >
            <use
              xlink:href="#ec-simple-search"
            />
          </svg>
           
          <input
            autocomplete="off"
            class="ec-dropdown-search__search-input"
            placeholder="Search..."
          />
        </li>
         
        <li>
          Items: 
          <pre>
            {
  "0": {
    "id": 1,
    "text": "Item 1"
  },
  "1": {
    "id": 2,
    "text": "Item 2"
  },
  "2": {
    "id": 3,
    "text": "Item 3"
  },
  "3": {
    "id": 4,
    "text": "Item 4",
    "disabled": true,
    "disabledReason": "Random text"
  },
  "4": {
    "id": 5,
    "text": "Item 5"
  }
}
          </pre>
        </li>
      </ul>
    </div>
  </ecpopover-stub>
</div>
`;

exports[`EcDropdownSearch should render the search by default 1`] = `
<li
  class="ec-dropdown-search__search-area"
>
  <svg
    class="ec-dropdown-search__search-icon ec-icon"
  >
    <use
      xlink:href="#ec-simple-search"
    />
  </svg>
   
  <input
    autocomplete="off"
    class="ec-dropdown-search__search-input"
    placeholder="Search..."
  />
</li>
`;

exports[`EcDropdownSearch should use and update the v-model 1`] = `
<li
  class="ec-dropdown-search__item ec-dropdown-search__item--is-selected"
  title="Item 1"
>
  Item 1
</li>
`;

exports[`EcDropdownSearch should use and update the v-model 2`] = `
<li
  class="ec-dropdown-search__item ec-dropdown-search__item--is-selected"
  title="Item 3"
>
  Item 3
</li>
`;

exports[`EcDropdownSearch should use the placeholder for search input if given 1`] = `
<li
  class="ec-dropdown-search__search-area"
>
  <svg
    class="ec-dropdown-search__search-icon ec-icon"
  >
    <use
      xlink:href="#ec-simple-search"
    />
  </svg>
   
  <input
    autocomplete="off"
    class="ec-dropdown-search__search-input"
    placeholder="Random text"
  />
</li>
`;
