// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`EcDropdown #slots should forward CTA slot 1`] = `
<li
  class="ec-dropdown-search__cta-area"
  data-test="ec-dropdown-search__cta-area"
>
  <button>
    My CTA
  </button>
</li>
`;

exports[`EcDropdown #slots should forward item slot 1`] = `
<ul
  class="ec-dropdown-search__item-list"
  data-test="ec-dropdown-search__item-list"
>
  <!---->
   
  <!---->
   
  <li
    class="ec-dropdown-search__item"
    data-test="ec-dropdown-search__item ec-dropdown-search__item--0"
    title="Item 1"
  >
    <div>
      (0) Item 1 - false
    </div>
  </li>
  <li
    class="ec-dropdown-search__item"
    data-test="ec-dropdown-search__item ec-dropdown-search__item--1"
    title="Item 2"
  >
    <div>
      (1) Item 2 - false
    </div>
  </li>
  <li
    class="ec-dropdown-search__item ec-dropdown-search__item--is-selected"
    data-test="ec-dropdown-search__item ec-dropdown-search__item--2"
    title="Item 3"
  >
    <div>
      (2) Item 3 - true
    </div>
  </li>
  <li
    class="ec-dropdown-search__item ec-dropdown-search__item--is-disabled ec-has-tooltip"
    data-original-title="Item 4"
    data-test="ec-dropdown-search__item ec-dropdown-search__item--3"
  >
    <div>
      (3) Item 4 - false
    </div>
  </li>
  <li
    class="ec-dropdown-search__item"
    data-test="ec-dropdown-search__item ec-dropdown-search__item--4"
    title="Item 5"
  >
    <div>
      (4) Item 5 - false
    </div>
  </li>
</ul>
`;

exports[`EcDropdown :props should enable search when isSearchEnabled is set to true 1`] = `
<li
  class="ec-dropdown-search__search-area"
  data-test="ec-dropdown-search__search-area"
>
  <svg
    class="ec-dropdown-search__search-icon ec-icon"
  >
    <use
      xlink:href="#ec-simple-search"
    />
  </svg>
   
  <input
    autocomplete="off"
    class="ec-dropdown-search__search-input"
    data-test="ec-dropdown-search__search-input"
    placeholder="Search..."
  />
</li>
`;

exports[`EcDropdown :props should get disabled when disabled prop is set 1`] = `
<div
  class="ec-dropdown-search ec-dropdown"
  data-test="ec-dropdown"
>
  <div
    class="ec-dropdown-search__trigger"
    data-popover-stub=""
    data-test="ec-popover-dropdown-search"
    disabled="disabled"
    offset="8"
    placement="bottom"
    popoverinnerclass="ec-dropdown-search__popover"
    popperoptions="[object Object]"
  >
    <div
      class="ec-input-field"
      data-test="ec-input-field"
    >
      <!---->
       
      <input
        class="ec-input-field__input ec-input-field__input--has-icon"
        data-test="ec-dropdown__input ec-input-field__input"
        disabled="disabled"
        id="ec-input-field-108"
        placeholder=""
        readonly="readonly"
        type="text"
      />
       
      <div
        class="ec-input-field__icon-wrapper ec-input-field__icon-wrapper--is-disabled"
        data-test="ec-input-field__icon-wrapper"
      >
        <svg
          class="ec-input-field__icon ec-icon"
          data-test="ec-input-field__icon"
          height="24"
          width="24"
        >
          <use
            xlink:href="#ec-simple-arrow-drop-down"
          />
        </svg>
      </div>
       
      <!---->
    </div>
     
    <div>
      <ul
        class="ec-dropdown-search__item-list"
        data-test="ec-dropdown-search__item-list"
      >
        <!---->
         
        <!---->
         
      </ul>
    </div>
  </div>
</div>
`;

exports[`EcDropdown :props should not show the items when the loading is set to true 1`] = `
<div
  class="ec-dropdown-search ec-dropdown"
  data-test="ec-dropdown"
>
  <div
    class="ec-dropdown-search__trigger"
    data-popover-stub=""
    data-test="ec-popover-dropdown-search"
    offset="8"
    placement="bottom"
    popoverinnerclass="ec-dropdown-search__popover"
    popperoptions="[object Object]"
  >
    <div
      class="ec-input-field"
      data-test="ec-input-field"
    >
      <!---->
       
      <input
        class="ec-input-field__input ec-input-field__input--has-icon"
        data-test="ec-dropdown__input ec-input-field__input"
        id="ec-input-field-114"
        placeholder=""
        readonly="readonly"
        type="text"
      />
       
      <div
        class="ec-input-field__icon-wrapper"
        data-test="ec-input-field__icon-wrapper"
      >
        <svg
          class="ec-input-field__icon ec-icon"
          data-test="ec-input-field__icon"
          height="24"
          width="24"
        >
          <use
            xlink:href="#ec-simple-arrow-drop-down"
          />
        </svg>
      </div>
       
      <!---->
    </div>
     
    <div>
      <ul
        class="ec-dropdown-search__item-list"
        data-test="ec-dropdown-search__item-list"
      >
        <!---->
         
        <!---->
         
        <li>
          <div
            class="ec-loading"
            data-test="ec-loading"
          >
            <div
              class="ec-loading__backdrop ec-loading__backdrop--is-transparent"
              data-test="ec-loading__backdrop"
            >
              <svg
                class="ec-loading__icon ec-icon"
                data-test="ec-loading__icon"
                height="24"
                width="24"
              >
                <use
                  xlink:href="#ec-simple-loading"
                />
              </svg>
            </div>
             
            <div
              class="ec-loading__content ec-loading__content--is-transparent"
              data-test="ec-loading__content"
            >
              <div
                class="ec-dropdown-search__loading"
                data-test="ec-dropdown-search__loading"
              />
            </div>
          </div>
        </li>
      </ul>
    </div>
  </div>
</div>
`;

exports[`EcDropdown :props should pass errorMessage prop to the triggering input 1`] = `undefined`;

exports[`EcDropdown :props should pass label prop to the triggering input 1`] = `
<label
  class="ec-input-field__label"
  data-test="ec-input-field__label"
  for="ec-input-field-70"
>
  <span
    class="ec-input-field__label-text"
    data-test="ec-input-field__label-text"
  >
    Random label
    <!---->
  </span>
   
  <!---->
</label>
`;

exports[`EcDropdown :props should use placeholder prop 1`] = `
<input
  class="ec-input-field__input ec-input-field__input--has-icon"
  data-test="ec-dropdown__input ec-input-field__input"
  id="ec-input-field-95"
  placeholder="Random placeholder"
  readonly="readonly"
  type="text"
/>
`;

exports[`EcDropdown :props should use searchPlaceholder prop if search is enabled 1`] = `
<li
  class="ec-dropdown-search__search-area"
  data-test="ec-dropdown-search__search-area"
>
  <svg
    class="ec-dropdown-search__search-icon ec-icon"
  >
    <use
      xlink:href="#ec-simple-search"
    />
  </svg>
   
  <input
    autocomplete="off"
    class="ec-dropdown-search__search-input"
    data-test="ec-dropdown-search__search-input"
    placeholder="Random search placeholder"
  />
</li>
`;

exports[`EcDropdown should render as expected 1`] = `
<div
  class="ec-dropdown-search ec-dropdown"
  data-test="ec-dropdown"
>
  <div
    class="ec-dropdown-search__trigger"
    data-popover-stub=""
    data-test="ec-popover-dropdown-search"
    offset="8"
    placement="bottom"
    popoverinnerclass="ec-dropdown-search__popover"
    popperoptions="[object Object]"
  >
    <div
      class="ec-input-field"
      data-test="ec-input-field"
    >
      <!---->
       
      <input
        class="ec-input-field__input ec-input-field__input--has-icon"
        data-test="ec-dropdown__input ec-input-field__input"
        id="ec-input-field-4"
        placeholder=""
        readonly="readonly"
        type="text"
      />
       
      <div
        class="ec-input-field__icon-wrapper"
        data-test="ec-input-field__icon-wrapper"
      >
        <svg
          class="ec-input-field__icon ec-icon"
          data-test="ec-input-field__icon"
          height="24"
          width="24"
        >
          <use
            xlink:href="#ec-simple-arrow-drop-down"
          />
        </svg>
      </div>
       
      <!---->
    </div>
     
    <div>
      <ul
        class="ec-dropdown-search__item-list"
        data-test="ec-dropdown-search__item-list"
      >
        <!---->
         
        <!---->
         
      </ul>
    </div>
  </div>
</div>
`;

exports[`EcDropdown should render readonly input as a trigger 1`] = `
<input
  class="ec-input-field__input ec-input-field__input--has-icon"
  data-test="ec-dropdown__input ec-input-field__input"
  id="ec-input-field-10"
  placeholder=""
  readonly="readonly"
  type="text"
/>
`;
