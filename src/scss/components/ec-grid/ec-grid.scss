$ec-grid-gutters: 24px;
$ec-grid-number-of-columns: 12;

@mixin ec-grid-common {
  display: flex;
  justify-content: flex-start;
  margin-left: $ec-grid-gutters / -2;
  margin-right: $ec-grid-gutters / -2;
}

.ec-grid {
  width: 100%;
}

@for $i from 1 through $ec-grid-number-of-columns {
  .ec-col-#{$i} {
    margin: $ec-grid-gutters / 2;
    flex-grow: 0;
    flex-shrink: 0;
    flex-basis: calc((100% * ( #{$i} / #{$ec-grid-number-of-columns})) - #{$ec-grid-gutters});
  }

  .ec-offset-#{$i} {
    margin-left: calc((100% * ( #{$i} / #{$ec-grid-number-of-columns})) + #{$ec-grid-gutters} / 2);
  }
}

.ec-grid__row {
  @include ec-grid-common;

  flex-direction: row;
  flex-wrap: wrap;

  &--reverse {
    @include ec-grid-common;

    flex-direction: row-reverse;
  }

  &--nowrap {
    flex-wrap: nowrap;
  }
}

.ec-grid__col {
  @include ec-grid-common;

  flex-direction: column;

  &--reverse {
    @include ec-grid-common;

    flex-direction: column-reverse;
  }
}

@each $breakpoint, $size in $breakpoints {
  @media screen and (min-width: #{$size}) {
    .ec-grid__row {
      &\@#{$breakpoint} {
        @include ec-grid-common;

        flex-direction: row;
        flex-wrap: wrap;
      }

      &--reverse\@#{$breakpoint} {
        @include ec-grid-common;

        flex-direction: row-reverse;
      }
    }

    .ec-grid__col {
      &\@#{$breakpoint} {
        @include ec-grid-common;

        flex-direction: column;
      }

      &--reverse\@#{$breakpoint} {
        @include ec-grid-common;

        flex-direction: column-reverse;
      }
    }
  }
}

// IE11 Flexbugs
@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {
  @for $i from 1 through $ec-grid-number-of-columns {
    .ec-grid__row > .ec-col-#{$i} {
      max-width: calc((100% * ( #{$i} / #{$ec-grid-number-of-columns})) - #{$ec-grid-gutters});
    }

    @each $breakpoint, $size in $breakpoints {
      @media screen and (min-width: #{$size}) {
        .ec-grid__row {
          &\@#{$breakpoint} > .ec-col-#{$i} {
            max-width: calc((100% * ( #{$i} / #{$ec-grid-number-of-columns})) - #{$ec-grid-gutters});
          }
        }

        .ec-grid__col {
          &\@#{$breakpoint} > .ec-col-#{$i} {
            max-width: none;
          }
        }
      }
    }
  }
}
